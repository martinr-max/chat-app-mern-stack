{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport Axios from 'axios';\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState([]);\n  const [user_name, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [room_Id, setRoomId] = useState('');\n  const [loggedIn, setLoggedIn] = useState('');\n  const user = props.location.state.userName;\n  const room = props.location.state.room;\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setUsername(user);\n    setRoomName(room);\n    socket.emit('join', {\n      user_name,\n      roomName\n    });\n  }, [user, user_name, room, roomName]);\n  useEffect(() => {\n    Axios.get(`http://localhost:8080/user/${roomName}`).then(res => {\n      if (res) {\n        console.log(res); //let roomId = res.data.existingUser._id;\n        //setRoomId(roomId)\n      }\n    });\n  }, [roomName]);\n  useEffect(() => {\n    socket.on('mostRecentMessages', data => {\n      setRecentMessages(data.messages);\n    });\n  }, [recentMessages]);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('send-message', message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", loggedIn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-show-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: messages && messages.map(msg => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [msg.user_name, \" :  \", msg.message_text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-create-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          onChange: handleChatInput,\n          className: \"chat-messages-create-input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-messages-create-button\",\n          onClick: e => sendMessage(e),\n          children: \" Send \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"hxMSk5oYwfeuU8JEOmVCiFgSpIw=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","io","Axios","ENDPOINT","socket","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","user_name","setUsername","roomName","setRoomName","room_Id","setRoomId","loggedIn","setLoggedIn","user","location","state","userName","room","emit","get","then","res","console","log","on","data","prevMessages","handleChatInput","event","persist","target","name","value","username","sendMessage","preventDefault","map","msg","message_text","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport Axios from 'axios';\n\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState([]);\n    const [user_name, setUsername] = useState('');\n    const [roomName, setRoomName] = useState('');\n    const [room_Id, setRoomId] = useState('');\n\n\n\n    const [loggedIn, setLoggedIn] = useState('');\n    const  user  = props.location.state.userName;\n    const  room  = props.location.state.room;\n\n\n    useEffect(() => {\n      socket = io(ENDPOINT);\n      setUsername(user);\n      setRoomName(room);\n      socket.emit('join',{user_name, roomName});\n\n    }, [user, user_name, room, roomName]);\n    \n    useEffect(()=> {\n      Axios.get(`http://localhost:8080/user/${roomName}`)\n      .then(res => {\n        if(res) {\n          console.log(res)\n          //let roomId = res.data.existingUser._id;\n          //setRoomId(roomId)\n\n        }\n       \n      })\n    }, [roomName]);\n\n \n    useEffect(() => {\n      socket.on('mostRecentMessages', data => {\n        setRecentMessages(data.messages)\n      })\n    }, [recentMessages])\n\n    useEffect(() => {\n      socket.on('newChatMessage', message => {\n        setMessages(prevMessages => [ ...prevMessages, message ]);\n      });\n    }, [])\n  \n\n    const handleChatInput = (event) => {\n      event.persist();\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name,\n      });\n    }\n\n\n    const sendMessage = (event) => {\n      event.preventDefault();\n      if(message) {\n        socket.emit('send-message',  message);\n      } \n    }\n    \n      return(\n        <div>\n          <h3> {loggedIn} </h3>\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n            <ul className=\"chat-messages-show-list\" id=\"message-list\">\n               \n                 </ul>\n              \n                <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                {messages && messages.map(msg => {\n                 return <li>{msg.user_name} :  { msg.message_text} </li>\n\n                \n              }\n                )\n      \n                }\n                 </ul>\n               \n                    \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={e => sendMessage(e)} > Send </button>\n            </div>\n        </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}