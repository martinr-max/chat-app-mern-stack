{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState();\n  const [userName, setUsername] = useState();\n  const user = props.location.state.username;\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setUsername(user);\n  }, []);\n  useEffect(() => {\n    socket.on('mostRecentMessages', recentMessages => {\n      setRecentMessages(recentMessages);\n    });\n  }, [recentMessages]);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('send-message', message, () => setMessage(''));\n    }\n  };\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-show-container\",\n      children: [recentMessages && recentMessages.map(msg => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", msg.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this);\n      }), messages && messages.map(msg => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [userName, \" :  \", msg.message_text, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        onChange: handleChatInput,\n        className: \"chat-messages-create-input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-messages-create-button\",\n        onClick: sendMessage,\n        children: \" Send \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"Uv8WY97bwb2BA7osrqNnNrjk84w=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","io","ENDPOINT","socket","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","userName","setUsername","user","location","state","username","on","sendMessage","event","preventDefault","emit","handleChatInput","persist","target","name","value","map","msg","message_text"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState();\n    const [userName, setUsername] = useState();\n\n    const user = props.location.state.username;\n    \n    \n\n\n\n\n    useEffect(() => {\n      socket = io(ENDPOINT);\n      setUsername(user);\n    }, [])\n\n    useEffect(() => {\n      socket.on('mostRecentMessages', recentMessages => {\n        setRecentMessages(recentMessages);\n      })\n    }, [recentMessages])\n\n    useEffect(()=> {\n      socket.on('newChatMessage', message => {\n        setMessages([ ...messages, message ])\n      });\n    }, [messages])\n\n\n\n    const sendMessage = (event) => {\n      event.preventDefault();\n  \n      if(message) {\n        socket.emit('send-message', message, () => setMessage(''));\n      }\n    }\n\n    const handleChatInput = (event) => {\n        event.persist();\n        setMessage({\n          [event.target.name]: event.target.value\n        });\n      }\n\n      return(\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n              {recentMessages && recentMessages.map(msg => {\n                 return <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                    <li> {msg.message} </li>\n             \n                 </ul>\n              }\n                )}\n                {messages && messages.map(msg => {\n                 return <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                    <li>{userName} :  { msg.message_text} </li>\n             \n                 </ul>\n              }\n                )}\n           \n                        \n            \n                    \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={sendMessage} > Send </button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}