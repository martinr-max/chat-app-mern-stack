{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chat.css';\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState([]);\n  const [user_name, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [loggedIn, setLoggedIn] = useState('');\n  const user = props.location.state.userName;\n  const room = props.location.state.room;\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setUsername(user);\n    setRoomName(room);\n    getChannelConversations();\n  }, [user, user_name, room, getChannelConversations]);\n  useEffect(() => {\n    socket.on('user joined', data => {\n      setLoggedIn(data.message_text);\n    });\n  }, []);\n  const getChannelConversations = useCallback(() => {\n    axios.get(`http://localhost:8080/chat/${roomName}`).then(res => {\n      console.log(res);\n      socket.emit('join', roomName, roomName);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, []);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, []);\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('send-message', message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", loggedIn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-show-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: messages && messages.map(msg => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [msg.user_name, \" :  \", msg.message_text, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 25\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-create-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          onChange: handleChatInput,\n          className: \"chat-messages-create-input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-messages-create-button\",\n          onClick: e => sendMessage(e),\n          children: \" Send \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"jSp08yOTfqHB/Bm/TVRO+vsMbzE=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","useCallback","io","axios","ENDPOINT","socket","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","user_name","setUsername","roomName","setRoomName","loggedIn","setLoggedIn","user","location","state","userName","room","getChannelConversations","on","data","message_text","get","then","res","console","log","emit","catch","error","prevMessages","handleChatInput","event","persist","target","name","value","username","sendMessage","preventDefault","map","msg","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chat.css';\n\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState([]);\n    const [user_name, setUsername] = useState('');\n    const [roomName, setRoomName] = useState('');\n\n\n    const [loggedIn, setLoggedIn] = useState('');\n    const  user  = props.location.state.userName;\n    const  room  = props.location.state.room;\n\n\n    useEffect(() => {\n      socket = io(ENDPOINT);\n      setUsername(user);\n      setRoomName(room);\n      getChannelConversations();\n\n    }, [user, user_name, room, getChannelConversations]);\n    \n    useEffect(()=> {\n      socket.on('user joined', data => {\n        setLoggedIn(data.message_text)\n      })\n    }, []);\n\n    const getChannelConversations = useCallback(() => {\n      axios.get(`http://localhost:8080/chat/${roomName}`)\n      .then(res => {\n        console.log(res)\n       \n    \n        socket.emit('join', roomName, roomName);\n  \n      \n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }, [])\n\n    useEffect(() => {\n      socket.on('newChatMessage', message => {\n        setMessages(prevMessages => [ ...prevMessages, message ]);\n      });\n    }, [])\n  \n\n    const handleChatInput = (event) => {\n      event.persist();\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name,\n      });\n    }\n\n\n    const sendMessage = (event) => {\n      event.preventDefault();\n      if(message) {\n        socket.emit('send-message',  message);\n      } \n    }\n    \n      return(\n        <div>\n          <h3> {loggedIn} </h3>\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n            <ul className=\"chat-messages-show-list\" id=\"message-list\">\n               \n                 </ul>\n              \n                <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                {messages && messages.map(msg => {\n                 return <li>{msg.user_name} :  { msg.message_text} </li>\n\n                \n              }\n                )\n      \n                }\n                 </ul>\n               \n                    \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={e => sendMessage(e)} > Send </button>\n            </div>\n        </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}