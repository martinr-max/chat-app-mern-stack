{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/fileUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport Button from '../../shared/Button/Button';\n\nconst ImageUpload = props => {\n  _s();\n\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n  const filePickerRef = useRef();\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n\n    const fileReader = new FileReader();\n\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-control\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: props.id,\n      ref: filePickerRef,\n      style: {\n        display: 'none'\n      },\n      type: \"file\",\n      accept: \".jpg,.png,.jpeg\",\n      onChange: pickedHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `image-upload ${props.center && 'center'}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-upload__preview\",\n        children: [previewUrl && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: previewUrl,\n          alt: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 28\n        }, this), !previewUrl && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Please pick an image.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        onClick: pickImageHandler,\n        children: \"PICK IMAGE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n\n_s(ImageUpload, \"F3L6Dk3MgM9L1Bkths28Unzoj0Y=\");\n\n_c = ImageUpload;\nexport default ImageUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUpload\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/fileUpload.js"],"names":["React","useRef","useState","useEffect","Button","ImageUpload","props","file","setFile","previewUrl","setPreviewUrl","isValid","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","pickedHandler","event","pickedFile","fileIsValid","target","files","length","onInput","id","pickImageHandler","current","click","display","center"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAAA;;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,EAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,EAA5C;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAMW,aAAa,GAAGZ,MAAM,EAA5B;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACI,IAAL,EAAW;AACT;AACD;;AACD,UAAMO,UAAU,GAAG,IAAIC,UAAJ,EAAnB;;AACAD,IAAAA,UAAU,CAACE,MAAX,GAAoB,MAAM;AACxBN,MAAAA,aAAa,CAACI,UAAU,CAACG,MAAZ,CAAb;AACD,KAFD;;AAGAH,IAAAA,UAAU,CAACI,aAAX,CAAyBX,IAAzB;AACD,GATQ,EASN,CAACA,IAAD,CATM,CAAT;;AAWA,QAAMY,aAAa,GAAGC,KAAK,IAAI;AAC7B,QAAIC,UAAJ;AACA,QAAIC,WAAW,GAAGX,OAAlB;;AACA,QAAIS,KAAK,CAACG,MAAN,CAAaC,KAAb,IAAsBJ,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmBC,MAAnB,KAA8B,CAAxD,EAA2D;AACzDJ,MAAAA,UAAU,GAAGD,KAAK,CAACG,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACAhB,MAAAA,OAAO,CAACa,UAAD,CAAP;AACAT,MAAAA,UAAU,CAAC,IAAD,CAAV;AACAU,MAAAA,WAAW,GAAG,IAAd;AACD,KALD,MAKO;AACLV,MAAAA,UAAU,CAAC,KAAD,CAAV;AACAU,MAAAA,WAAW,GAAG,KAAd;AACD;;AACDhB,IAAAA,KAAK,CAACoB,OAAN,CAAcpB,KAAK,CAACqB,EAApB,EAAwBN,UAAxB,EAAoCC,WAApC;AACD,GAbD;;AAeA,QAAMM,gBAAgB,GAAG,MAAM;AAC7Bf,IAAAA,aAAa,CAACgB,OAAd,CAAsBC,KAAtB;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACE;AACE,MAAA,EAAE,EAAExB,KAAK,CAACqB,EADZ;AAEE,MAAA,GAAG,EAAEd,aAFP;AAGE,MAAA,KAAK,EAAE;AAAEkB,QAAAA,OAAO,EAAE;AAAX,OAHT;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,MAAM,EAAC,iBALT;AAME,MAAA,QAAQ,EAAEZ;AANZ;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAK,MAAA,SAAS,EAAG,gBAAeb,KAAK,CAAC0B,MAAN,IAAgB,QAAS,EAAzD;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA,mBACGvB,UAAU,iBAAI;AAAK,UAAA,GAAG,EAAEA,UAAV;AAAsB,UAAA,GAAG,EAAC;AAA1B;AAAA;AAAA;AAAA;AAAA,gBADjB,EAEG,CAACA,UAAD,iBAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFlB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEmB,gBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YATF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA3DH;;GAAMvB,W;;KAAAA,W;AA6DJ,eAAeA,WAAf","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\nimport Button from '../../shared/Button/Button'\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n  \n    const filePickerRef = useRef();\n  \n    useEffect(() => {\n      if (!file) {\n        return;\n      }\n      const fileReader = new FileReader();\n      fileReader.onload = () => {\n        setPreviewUrl(fileReader.result);\n      };\n      fileReader.readAsDataURL(file);\n    }, [file]);\n  \n    const pickedHandler = event => {\n      let pickedFile;\n      let fileIsValid = isValid;\n      if (event.target.files && event.target.files.length === 1) {\n        pickedFile = event.target.files[0];\n        setFile(pickedFile);\n        setIsValid(true);\n        fileIsValid = true;\n      } else {\n        setIsValid(false);\n        fileIsValid = false;\n      }\n      props.onInput(props.id, pickedFile, fileIsValid);\n    };\n  \n    const pickImageHandler = () => {\n      filePickerRef.current.click();\n    };\n  \n    return (\n      <div className=\"form-control\">\n        <input\n          id={props.id}\n          ref={filePickerRef}\n          style={{ display: 'none' }}\n          type=\"file\"\n          accept=\".jpg,.png,.jpeg\"\n          onChange={pickedHandler}\n        />\n        <div className={`image-upload ${props.center && 'center'}`}>\n          <div className=\"image-upload__preview\">\n            {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n            {!previewUrl && <p>Please pick an image.</p>}\n          </div>\n          <Button type=\"button\" onClick={pickImageHandler}>\n            PICK IMAGE\n          </Button>\n        </div>\n     \n      </div>\n    );\n  };\n  \n  export default ImageUpload;\n  "]},"metadata":{},"sourceType":"module"}