{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport SocketContext from '../../context/socketContext';\nimport Container from '@material-ui/core/Container';\nimport './Chat.css';\nimport { Grid } from '@material-ui/core';\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState([]);\n  const [user_name, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const socket = useContext(SocketContext);\n  const [loggedIn, setLoggedIn] = useState('');\n  const user = props.location.state.userName;\n  const room = props.location.state.room;\n  useEffect(() => {\n    setUsername(user);\n    setRoomName(room);\n    socket.emit('join', user_name, roomName);\n  }, [user, user_name, room, roomName, socket]);\n  useEffect(() => {\n    socket.on('broadcast', data => {\n      setLoggedIn(data.message_text);\n    });\n  }, [user, user_name, room, roomName, socket]);\n  useEffect(() => {\n    socket.on('mostRecentMessages', data => {\n      setRecentMessages(data);\n    });\n  }, [recentMessages, socket]);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, [socket]);\n\n  const handleChatInput = event => {\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name,\n      room: roomName\n    });\n  };\n\n  let sendMessage = useRef();\n  let disconnectU = useRef();\n  useEffect(() => {\n    sendMessage.current = () => {\n      socket.emit('send-message', roomName, message);\n    };\n  }, [socket, message, roomName]);\n  useEffect(() => {\n    disconnectU.current = () => {\n      socket.emit('leave', roomName, user_name);\n    };\n  }, [socket, user_name, roomName]);\n  useEffect(() => {\n    window.onunload = async () => {\n      socket.emit('leave', roomName, user_name);\n    };\n  }, [socket, roomName, user_name]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      id: \"top-row\",\n      container: true,\n      spacing: 24,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"userlist\",\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"tere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", loggedIn, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnectU.current,\n              children: \" Log out \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages-show-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-messages-show-list\",\n              id: \"message-list\",\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: recentMessages && user_name && recentMessages.map(msg => {\n                  return msg.username === user_name ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"messageContainer justifyEnd\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"sentText pr-10\",\n                      children: msg.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 10\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"messageBox backgroundBlue\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"messageText colorWhite\",\n                        children: msg.message\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 12\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 10\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 10\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"messageContainer justifyStart\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"messageBox backgroundLight\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"messageText colorDark\",\n                        children: [\" \", msg.message, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 14\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 12\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"sentText pl-10 \",\n                      children: msg.username\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 12\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 10\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-messages-show-list\",\n              id: \"message-list\",\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: messages && user_name && messages.map(msg => {\n                  return msg.user_name === user_name ? /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"messageContainer justifyEnd\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"sentText pr-10\",\n                      children: msg.user_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"messageBox backgroundBlue\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"messageText colorWhite\",\n                        children: msg.message_text\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 155,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 154,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 152,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"messageContainer justifyStart\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"messageBox backgroundLight\",\n                      children: /*#__PURE__*/_jsxDEV(\"p\", {\n                        className: \"messageText colorDark\",\n                        children: [\" \", msg.message_text, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 31\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      className: \"sentText pl-10 \",\n                      children: msg.user_name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 27\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages-create-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"message\",\n              onChange: handleChatInput,\n              className: \"chat-messages-create-input\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-messages-create-button\",\n              onClick: e => sendMessage.current(),\n              children: \" Send \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"RfHQTZELEg+PLGbvC8LgnVFLJus=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","useContext","useRef","SocketContext","Container","Grid","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","user_name","setUsername","roomName","setRoomName","socket","loggedIn","setLoggedIn","user","location","state","userName","room","emit","on","data","message_text","prevMessages","handleChatInput","event","target","name","value","username","sendMessage","disconnectU","current","window","onunload","map","msg","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport SocketContext from '../../context/socketContext';\nimport Container from '@material-ui/core/Container';\n\nimport './Chat.css';\nimport { Grid } from '@material-ui/core';\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState([]);\n    const [user_name, setUsername] = useState('');\n    const [roomName, setRoomName] = useState('');\n\n    const socket = useContext(SocketContext)\n  \n    const [loggedIn, setLoggedIn] = useState('');\n    const  user  = props.location.state.userName;\n    const  room  = props.location.state.room;\n\n    useEffect(() => {\n      setUsername(user);\n      setRoomName(room);\n      socket.emit('join', user_name, roomName);\n    }, [user, user_name, room, roomName, socket]);\n\n\n\n    useEffect(() => {\n\n      socket.on('broadcast', data => {\n        setLoggedIn(data.message_text)\n      });\n             \n\n\n    }, [user, user_name, room, roomName, socket]);\n   \n   \n\n \n    useEffect(() => {\n      socket.on('mostRecentMessages', data => {\n        setRecentMessages(data)\n      })\n      \n    \n    }, [recentMessages, socket])\n\n    useEffect(() => {\n      socket.on('newChatMessage', message => {\n        setMessages(prevMessages => [ ...prevMessages, message ]);\n\n\n      });\n      \n    }, [socket])\n  \n\n    const handleChatInput = (event) => {\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name,\n        room: roomName,\n      });\n    }\n\n\n    let sendMessage = useRef();\n    let disconnectU = useRef()\n\n    useEffect(() => {\n        sendMessage.current = () => {\n        socket.emit('send-message',roomName, message)\n      }  \n    },[socket, message, roomName])\n\n    useEffect(() => { \n      disconnectU.current = () => {\n        socket.emit('leave',roomName, user_name);\n      }\n      \n     \n    },[socket, user_name, roomName])\n\n    useEffect(() => {\n      window.onunload = async() => {\n        socket.emit('leave',roomName, user_name);\n        \n      }\n\n    }, [socket, roomName, user_name])\n   \n\n   \n    return(\n        <Container>\n          <Grid id=\"top-row\" container spacing={24}>\n          <Grid className=\"userlist\" item xs={4}>\n            <p>tere</p>\n\n          </Grid>\n          <Grid item xs={6}>\n          <h3> {loggedIn} </h3>\n         \n        <div >\n        <div>\n                <button onClick={disconnectU.current}> Log out </button>\n              </div>\n            <div className=\"chat-messages-show-container\">\n              \n             \n               \n                <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                <React.Fragment>\n\n{recentMessages && user_name && recentMessages.map(msg => {\n   return msg.username === user_name ?\n    \n       ( \n         <div className=\"messageContainer justifyEnd\">\n         <p className=\"sentText pr-10\">{msg.username}</p>\n         <div className=\"messageBox backgroundBlue\">\n           <p className=\"messageText colorWhite\">{msg.message}</p>\n         </div>\n       </div>          \n        ):\n \n       (\n         <div className=\"messageContainer justifyStart\">\n           <div className=\"messageBox backgroundLight\">\n             <p className=\"messageText colorDark\"> {msg.message} </p>\n           </div>\n           <p className=\"sentText pl-10 \">{msg.username}</p>\n         </div>\n       )\n        \n\n       })}\n       </React.Fragment>\n                 </ul>\n\n                <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                <React.Fragment>\n\n                 {messages && user_name && messages.map(msg => {\n                    return msg.user_name === user_name ?\n                     \n                        ( \n                          <div className=\"messageContainer justifyEnd\">\n                          <p className=\"sentText pr-10\">{msg.user_name}</p>\n                          <div className=\"messageBox backgroundBlue\">\n                            <p className=\"messageText colorWhite\">{msg.message_text}</p>\n                          </div>\n                        </div>          \n                         ):\n                  \n                        (\n                          <div className=\"messageContainer justifyStart\">\n                            <div className=\"messageBox backgroundLight\">\n                              <p className=\"messageText colorDark\"> {msg.message_text} </p>\n                            </div>\n                            <p className=\"sentText pl-10 \">{msg.user_name}</p>\n                          </div>\n                        )\n                         \n          \n                        })}\n                        </React.Fragment>\n                 </ul>\n               \n               \n               \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={e => sendMessage.current()} > Send </button>\n            </div>\n        </div>\n        </Grid>\n        </Grid>\n        </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}