{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chat.css';\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState(''); //const [messages, setMessages] = useState([]);\n  //const [recentMessages, setRecentMessages] = useState([]);\n\n  const [user_name, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [loggedIn, setLoggedIn] = useState('');\n  const user = props.location.state.userName;\n  const room = props.location.state.room;\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setUsername(user);\n    setRoomName(room);\n  }, [user, user_name, room]);\n  useEffect(() => {\n    socket.on('user joined', data => {\n      setLoggedIn(data.message_text);\n    });\n  }, []);\n  const getChannelConversations = useCallback(() => {\n    axios.get(`http://localhost:8080/chat/${roomName}`).then(res => {\n      console.log(res);\n      socket.emit('join', roomName, roomName);\n    }).catch(error => {\n      console.log(error);\n    });\n  }, [roomName]);\n  useEffect(() => {\n    getChannelConversations();\n  }, [getChannelConversations]);\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log('tere');\n    axios.post(`http://localhost:8080/${roomName}`, {\n      inputMessage: message\n    }).then(res => {\n      console.log(res);\n      const socketMsg = {\n        message: message,\n        author: user_name\n      };\n      socket.emit('send-message', socketMsg);\n      setMessage('');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\" \", loggedIn, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-show-container\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages-create-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"message\",\n          onChange: handleChatInput,\n          className: \"chat-messages-create-input\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"chat-messages-create-button\",\n          onClick: e => sendMessage(e),\n          children: \" Send \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"51eBwj21tRrW+sLGJtuL/xqKtcc=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","useCallback","io","axios","ENDPOINT","socket","Chat","props","message","setMessage","user_name","setUsername","roomName","setRoomName","loggedIn","setLoggedIn","user","location","state","userName","room","on","data","message_text","getChannelConversations","get","then","res","console","log","emit","catch","error","handleChatInput","event","persist","target","name","value","username","sendMessage","preventDefault","post","inputMessage","socketMsg","author","err","e"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,QAAwD,OAAxD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AAEA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,IAAIC,MAAJ;AAGA,eAAe,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AAEhC,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,EAAD,CAAtC,CAFgC,CAGhC;AACA;;AACA,QAAM,CAACW,SAAD,EAAYC,WAAZ,IAA2BZ,QAAQ,CAAC,EAAD,CAAzC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AAGA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAOiB,IAAI,GAAIT,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBC,QAApC;AACA,QAAOC,IAAI,GAAIb,KAAK,CAACU,QAAN,CAAeC,KAAf,CAAqBE,IAApC;AAGApB,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,GAAGH,EAAE,CAACE,QAAD,CAAX;AACAO,IAAAA,WAAW,CAACK,IAAD,CAAX;AACAH,IAAAA,WAAW,CAACO,IAAD,CAAX;AAED,GALQ,EAKN,CAACJ,IAAD,EAAON,SAAP,EAAkBU,IAAlB,CALM,CAAT;AAOApB,EAAAA,SAAS,CAAC,MAAK;AACbK,IAAAA,MAAM,CAACgB,EAAP,CAAU,aAAV,EAAyBC,IAAI,IAAI;AAC/BP,MAAAA,WAAW,CAACO,IAAI,CAACC,YAAN,CAAX;AACD,KAFD;AAGD,GAJQ,EAIN,EAJM,CAAT;AAMA,QAAMC,uBAAuB,GAAGvB,WAAW,CAAC,MAAM;AAChDE,IAAAA,KAAK,CAACsB,GAAN,CAAW,8BAA6Bb,QAAS,EAAjD,EACCc,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAGAtB,MAAAA,MAAM,CAACyB,IAAP,CAAY,MAAZ,EAAoBlB,QAApB,EAA8BA,QAA9B;AAGD,KARD,EASCmB,KATD,CASOC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ;AACD,KAXD;AAYD,GAb0C,EAaxC,CAACpB,QAAD,CAbwC,CAA3C;AAeAZ,EAAAA,SAAS,CAAC,MAAM;AACdwB,IAAAA,uBAAuB;AAExB,GAHQ,EAGN,CAACA,uBAAD,CAHM,CAAT;;AAQA,QAAMS,eAAe,GAAIC,KAAD,IAAW;AACjCA,IAAAA,KAAK,CAACC,OAAN;AACA1B,IAAAA,UAAU,CAAC;AACT,OAACyB,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE,KADzB;AAETC,MAAAA,QAAQ,EAAE7B;AAFD,KAAD,CAAV;AAID,GAND;;AASA,QAAM8B,WAAW,GAAIN,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACO,cAAN;AACAb,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAGF1B,IAAAA,KAAK,CAACuC,IAAN,CAAY,yBAAwB9B,QAAS,EAA7C,EAAiD;AAAC+B,MAAAA,YAAY,EAAEnC;AAAf,KAAjD,EACCkB,IADD,CACMC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAMiB,SAAS,GAAG;AAChBpC,QAAAA,OAAO,EAAEA,OADO;AAEhBqC,QAAAA,MAAM,EAAEnC;AAFQ,OAAlB;AAIAL,MAAAA,MAAM,CAACyB,IAAP,CAAY,cAAZ,EAA4Bc,SAA5B;AACAnC,MAAAA,UAAU,CAAC,EAAD,CAAV;AAED,KAVD,EAWCsB,KAXD,CAWOe,GAAG,IAAI;AACZlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,GAAZ;AACD,KAbD;AAeD,GApBC;;AAwBE,sBACE;AAAA,4BACE;AAAA,sBAAMhC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADJ,eAMI;AAAK,QAAA,SAAS,EAAC,gCAAf;AAAA,gCACI;AAAO,UAAA,IAAI,EAAC,SAAZ;AACI,UAAA,QAAQ,EAAEmB,eADd;AAC+B,UAAA,SAAS,EAAC,4BADzC;AACsE,UAAA,IAAI,EAAC;AAD3E;AAAA;AAAA;AAAA;AAAA,gBADJ,eAGI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAuB,UAAA,SAAS,EAAC,6BAAjC;AAA+D,UAAA,OAAO,EAAEc,CAAC,IAAIP,WAAW,CAACO,CAAD,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBL;;GApGuBzC,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport io from 'socket.io-client';\nimport axios from 'axios';\nimport './Chat.css';\n\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    //const [messages, setMessages] = useState([]);\n    //const [recentMessages, setRecentMessages] = useState([]);\n    const [user_name, setUsername] = useState('');\n    const [roomName, setRoomName] = useState('');\n\n\n    const [loggedIn, setLoggedIn] = useState('');\n    const  user  = props.location.state.userName;\n    const  room  = props.location.state.room;\n\n\n    useEffect(() => {\n      socket = io(ENDPOINT);\n      setUsername(user);\n      setRoomName(room);\n\n    }, [user, user_name, room]);\n    \n    useEffect(()=> {\n      socket.on('user joined', data => {\n        setLoggedIn(data.message_text)\n      })\n    }, []);\n\n    const getChannelConversations = useCallback(() => {\n      axios.get(`http://localhost:8080/chat/${roomName}`)\n      .then(res => {\n        console.log(res)\n       \n    \n        socket.emit('join', roomName, roomName);\n  \n      \n      })\n      .catch(error => {\n        console.log(error)\n      })\n    }, [roomName])\n\n    useEffect(() => {\n      getChannelConversations();\n\n    }, [getChannelConversations])\n\n\n  \n\n    const handleChatInput = (event) => {\n      event.persist();\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name,\n      });\n    }\n\n\n    const sendMessage = (event) => {\n      event.preventDefault();\n      console.log('tere')\n      \n\n    axios.post(`http://localhost:8080/${roomName}`,  {inputMessage: message})\n    .then(res => {\n      console.log(res)\n      const socketMsg = {\n        message: message,\n        author: user_name,\n      }\n      socket.emit('send-message', socketMsg)\n      setMessage('')\n\n    })\n    .catch(err => {\n      console.log(err)\n    })\n\n  }\n  \n  \n    \n      return(\n        <div>\n          <h3> {loggedIn} </h3>\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n           \n               \n                    \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={e => sendMessage(e)} > Send </button>\n            </div>\n        </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}