{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport SocketContext from '../../context/socketContext';\nimport Container from '@material-ui/core/Container';\nimport './Chat.css';\nimport { Grid } from '@material-ui/core';\nimport RecentMessages from '../components/RecentMessages/RecentMessages';\nimport CurrentMessages from '../components/currentMessages/CurrentMessages';\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState([]);\n  const [user_name, setUsername] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const socket = useContext(SocketContext);\n  const [loggedIn, setLoggedIn] = useState('');\n  const user = props.location.state.userName;\n  const room = props.location.state.room;\n  useEffect(() => {\n    setUsername(user);\n    setRoomName(room);\n    socket.emit('join', user_name, roomName);\n  }, [user, user_name, room, roomName, socket]);\n  useEffect(() => {\n    socket.on('broadcast', data => {\n      setLoggedIn(data.message_text);\n    });\n  }, [user, user_name, room, roomName, socket]);\n  useEffect(() => {\n    socket.on('mostRecentMessages', data => {\n      setRecentMessages(data);\n    });\n  }, [recentMessages, socket]);\n  useEffect(() => {\n    socket.on('usersInRoom', users => {\n      console.log(users);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, [socket]);\n\n  const handleChatInput = event => {\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name,\n      room: roomName\n    });\n  };\n\n  let sendMessage = useRef();\n  let disconnectU = useRef();\n  useEffect(() => {\n    sendMessage.current = () => {\n      socket.emit('send-message', roomName, message);\n    };\n  }, [socket, message, roomName]);\n  useEffect(() => {\n    disconnectU.current = () => {\n      socket.emit('leave', roomName, user_name);\n    };\n  }, [socket, user_name, roomName]);\n  useEffect(() => {\n    window.onunload = async () => {\n      socket.emit('leave', roomName, user_name);\n    };\n  }, [socket, roomName, user_name]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      id: \"top-row\",\n      container: true,\n      item: true,\n      xl: 12,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"userList\",\n        item: 3,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"tere\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: 6,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\" \", loggedIn, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: disconnectU.current,\n              children: \" Log out \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages-show-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-messages-show-list\",\n              id: \"message-list\",\n              children: /*#__PURE__*/_jsxDEV(RecentMessages, {\n                recentMessages: recentMessages,\n                user_name: user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chat-messages-show-list\",\n              id: \"message-list\",\n              children: /*#__PURE__*/_jsxDEV(CurrentMessages, {\n                messages: messages,\n                user_name: user_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages-create-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"message\",\n              onChange: handleChatInput,\n              className: \"chat-messages-create-input\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-messages-create-button\",\n              onClick: e => sendMessage.current(),\n              children: \" Send \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"nt9RMx0CVW4ItYzWKne1JYMfMjM=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","useContext","useRef","SocketContext","Container","Grid","RecentMessages","CurrentMessages","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","user_name","setUsername","roomName","setRoomName","socket","loggedIn","setLoggedIn","user","location","state","userName","room","emit","on","data","message_text","users","console","log","prevMessages","handleChatInput","event","target","name","value","username","sendMessage","disconnectU","current","window","onunload","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport SocketContext from '../../context/socketContext';\nimport Container from '@material-ui/core/Container';\nimport './Chat.css';\nimport { Grid } from '@material-ui/core';\nimport RecentMessages from '../components/RecentMessages/RecentMessages';\nimport CurrentMessages from '../components/currentMessages/CurrentMessages';\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState([]);\n    const [user_name, setUsername] = useState('');\n    const [roomName, setRoomName] = useState('');\n\n    const socket = useContext(SocketContext)\n  \n    const [loggedIn, setLoggedIn] = useState('');\n    const  user  = props.location.state.userName;\n    const  room  = props.location.state.room;\n\n    useEffect(() => {\n      setUsername(user);\n      setRoomName(room);\n      socket.emit('join', user_name, roomName);\n    }, [user, user_name, room, roomName, socket]);\n\n\n\n    useEffect(() => {\n\n      socket.on('broadcast', data => {\n        setLoggedIn(data.message_text)\n      });\n             \n\n\n    }, [user, user_name, room, roomName, socket]);\n   \n   \n\n \n    useEffect(() => {\n      socket.on('mostRecentMessages', data => {\n        setRecentMessages(data)\n      })\n      \n    \n    }, [recentMessages, socket])\n\n    useEffect(() => {\n      socket.on('usersInRoom', users => {\n        console.log(users)\n      })\n      \n    \n    }, [ socket])\n\n\n    useEffect(() => {\n      socket.on('newChatMessage', message => {\n        setMessages(prevMessages => [ ...prevMessages, message ]);\n\n\n      });\n      \n    }, [socket])\n  \n\n    const handleChatInput = (event) => {\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name,\n        room: roomName,\n      });\n    }\n\n\n    let sendMessage = useRef();\n    let disconnectU = useRef();\n\n    useEffect(() => {\n        sendMessage.current = () => {\n        socket.emit('send-message',roomName, message)\n      }  \n    },[socket, message, roomName])\n\n    useEffect(() => { \n      disconnectU.current = () => {\n        socket.emit('leave',roomName, user_name);\n      }\n      \n     \n    },[socket, user_name, roomName])\n\n    useEffect(() => {\n      window.onunload = async() => {\n        socket.emit('leave',roomName, user_name);\n        \n      }\n\n    }, [socket, roomName, user_name])\n\n  \n    return(\n        <Container>\n          <Grid id=\"top-row\" container item xl={12}>\n            <Grid className=\"userList\" item ={3}>\n            <p>tere</p>\n            </Grid>\n          <Grid item xl={6}>\n            <h3> {loggedIn} </h3>\n            <div >\n              <div>\n                <button onClick={disconnectU.current}> Log out </button>\n              </div>\n              <div className=\"chat-messages-show-container\"  >\n                <div className=\"chat-messages-show-list\" id=\"message-list\"   >\n                      <RecentMessages recentMessages={recentMessages} user_name={user_name} />\n                 </div>\n                <div className=\"chat-messages-show-list\" id=\"message-list\" >\n                      <CurrentMessages messages={messages} user_name={user_name} />\n                </div>   \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput}\n                    className=\"chat-messages-create-input\"\n                    type=\"text\" />\n                <button\n                  type=\"submit\"\n                  className=\"chat-messages-create-button\"\n                  onClick={e => sendMessage.current()} > Send </button>\n            </div>\n        </div>\n        </Grid>\n        </Grid>\n      </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}