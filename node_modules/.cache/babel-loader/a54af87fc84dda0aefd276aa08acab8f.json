{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState();\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState();\n  const [user_name, setUsername] = useState({\n    user_name: ''\n  });\n  const [users, setUsers] = useState([]);\n  const user = props.location.state.userName;\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setUsername({\n      user_name: user\n    });\n    socket.emit('add user', user_name);\n  }, [user, user_name]);\n  useEffect(() => {\n    socket.on('mostRecentMessages', recentMessages => {\n      setRecentMessages(recentMessages);\n    });\n  }, [recentMessages]);\n  /*\n  useEffect(()=> {\n    socket.on('newChatMessage', message => {\n      return setMessages([ ...messages, message ]) \n    });\n   }, [messages, users, user_name])*/\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n    console.log(user_name);\n    setMessage({\n      username: user_name,\n      message: message\n    });\n    socket.emit('new message', message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-show-container\",\n      children: [recentMessages && recentMessages.map(msg => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", msg.message, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this);\n      }), messages && messages.map(msg => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", msg.message_text, \" \"]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        onChange: handleChatInput,\n        className: \"chat-messages-create-input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-messages-create-button\",\n        onClick: sendMessage,\n        children: \" Send \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"IDDUmH+U9icW1wiLxS7zgOncohc=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","io","ENDPOINT","socket","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","user_name","setUsername","users","setUsers","user","location","state","userName","emit","on","handleChatInput","event","persist","target","name","value","sendMessage","preventDefault","console","log","username","map","msg","message_text","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\n\n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState();\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState();\n    const [user_name, setUsername] = useState({user_name: ''});\n    const [users, setUsers] = useState([]);   \n    \n    const  user  = props.location.state.userName;\n \n  \n    useEffect(() => {\n      socket = io(ENDPOINT);\n      setUsername({user_name: user});\n      socket.emit('add user',  user_name );\n    }, [user, user_name])\n\n    useEffect(() => {\n      socket.on('mostRecentMessages', recentMessages => {\n        setRecentMessages(recentMessages);\n      })\n    }, [recentMessages])\n\n    /*\n    useEffect(()=> {\n      socket.on('newChatMessage', message => {\n        return setMessages([ ...messages, message ]) \n      });\n\n    }, [messages, users, user_name])*/\n\n    const handleChatInput = (event) => {\n      event.persist();\n      setMessage({\n        [event.target.name]: event.target.value\n      });\n    }\n\n    const sendMessage = (event) => {\n      event.preventDefault();\n      console.log(user_name)\n      setMessage({\n        username: user_name,\n        message: message\n      });\n      socket.emit('new message', message);\n      \n       \n    }\n\n    \n\n      return(\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n              {recentMessages && recentMessages.map(msg => {\n                 return <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                    <li> {msg.message} </li>\n             \n                 </ul>\n              }\n                )}\n                {messages && messages.map(msg => {\n                 return <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                    <li key={msg.id}> { msg.message_text} </li>\n             \n                 </ul>\n              }\n                )}\n           \n                        \n            \n                    \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={sendMessage} > Send </button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}