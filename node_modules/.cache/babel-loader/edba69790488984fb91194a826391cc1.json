{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport ChatForm from '../ChatForm/ChatForm';\nconst ENDPOINT = io(\"http://localhost:8080\");\nexport default function Chat() {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  let socket = useRef(0);\n  useEffect(() => {\n    const establishSocketConnection = async () => {\n      try {\n        socket.current = await io(ENDPOINT);\n      } catch (error) {\n        alert(`Something went wrong; Can't connect to socket server`);\n      }\n    };\n\n    establishSocketConnection();\n  }, []);\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('send-Message', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-show-container\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"chat-messages-show-list\",\n        id: \"message-list\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        onChange: handleChatInput,\n        className: \"chat-messages-create-input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-messages-create-button\",\n        onClick: sendMessage,\n        children: \" Send \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"Lr9AJ1jP8YIUVrwDLebBzyaU07w=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","useRef","io","ChatForm","ENDPOINT","Chat","message","setMessage","messages","setMessages","socket","establishSocketConnection","current","error","alert","handleChatInput","event","persist","target","name","value","sendMessage","preventDefault","emit"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,OAAOC,QAAP,MAAqB,sBAArB;AAEA,MAAMC,QAAQ,GAAGF,EAAE,CAAC,uBAAD,CAAnB;AAGA,eAAe,SAASG,IAAT,GAAgB;AAAA;;AAE3B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AACA,MAAIW,MAAM,GAAGT,MAAM,CAAC,CAAD,CAAnB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AAEd,UAAMW,yBAAyB,GAAG,YAAY;AAC5C,UAAI;AACAD,QAAAA,MAAM,CAACE,OAAP,GAAiB,MAAMV,EAAE,CAACE,QAAD,CAAzB;AACH,OAFD,CAEE,OAAOS,KAAP,EAAc;AACZC,QAAAA,KAAK,CAAE,sDAAF,CAAL;AACH;AACJ,KANC;;AAOFH,IAAAA,yBAAyB;AAExB,GAXQ,EAWN,EAXM,CAAT;;AAiBA,QAAMI,eAAe,GAAIC,KAAD,IAAW;AAC/BA,IAAAA,KAAK,CAACC,OAAN;AACAV,IAAAA,UAAU,CAAC;AACT,OAACS,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAqBH,KAAK,CAACE,MAAN,CAAaE;AADzB,KAAD,CAAV;AAGD,GALH;;AAOE,QAAMC,WAAW,GAAIL,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACM,cAAN;;AAEA,QAAGhB,OAAH,EAAY;AACVI,MAAAA,MAAM,CAACa,IAAP,CAAY,cAAZ,EAA4BjB,OAA5B,EAAqC,MAAMC,UAAU,CAAC,EAAD,CAArD;AACD;AACF,GAND;;AAWA,sBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA,6BACQ;AAAI,QAAA,SAAS,EAAC,yBAAd;AAAwC,QAAA,EAAE,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA;AADR;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,SAAZ;AACI,QAAA,QAAQ,EAAEQ,eADd;AAC+B,QAAA,SAAS,EAAC,4BADzC;AACsE,QAAA,IAAI,EAAC;AAD3E;AAAA;AAAA;AAAA;AAAA,cADJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAuB,QAAA,SAAS,EAAC,6BAAjC;AAA+D,QAAA,OAAO,EAAEM,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAaL;;GAtDuBhB,I;;KAAAA,I","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport io from 'socket.io-client';\nimport ChatForm from '../ChatForm/ChatForm';\n\nconst ENDPOINT = io(\"http://localhost:8080\");\n\n\nexport default function Chat() {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    let socket = useRef(0);\n\n    useEffect(() => {\n      \n      const establishSocketConnection = async () => {\n        try {\n            socket.current = await io(ENDPOINT);\n        } catch (error) {\n            alert(`Something went wrong; Can't connect to socket server`);\n        }\n    }\n    establishSocketConnection();\n\n    }, [])\n\n    \n\n    \n\n    const handleChatInput = (event) => {\n        event.persist();\n        setMessage({\n          [event.target.name]: event.target.value\n        });\n      }\n\n      const sendMessage = (event) => {\n        event.preventDefault();\n    \n        if(message) {\n          socket.emit('send-Message', message, () => setMessage(''));\n        }\n      }\n\n\n    \n     \n      return(\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n                    <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                    </ul>\n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={sendMessage} > Send </button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}