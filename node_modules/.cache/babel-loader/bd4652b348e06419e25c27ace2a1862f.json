{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/context/socketContext.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\nconst SOCKET_URL = \"http://localhost:8080\";\nexport const SocketContext = /*#__PURE__*/createContext();\nexport const SocketProvider = ({\n  children\n}) => {\n  _s();\n\n  const [socket, setSocket] = useState();\n  useEffect(() => {\n    let connect = io(SOCKET_URL);\n    setSocket(connect);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: socket,\n    children: [\" \", children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SocketProvider, \"hiNpVvqoDzQD/SDhIdq26R3jJHg=\");\n\n_c = SocketProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"SocketProvider\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/context/socketContext.js"],"names":["createContext","useEffect","useState","io","SOCKET_URL","SocketContext","SocketProvider","children","socket","setSocket","connect"],"mappings":";;;;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,UAAU,GAAG,uBAAnB;AAEA,OAAO,MAAMC,aAAa,gBAAGL,aAAa,EAAnC;AAEP,OAAO,MAAMM,cAAc,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAAA;;AAE1C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,OAAO,GAAGP,EAAE,CAACC,UAAD,CAAhB;AACAK,IAAAA,SAAS,CAACC,OAAD,CAAT;AAEH,GAJQ,EAIN,EAJM,CAAT;AAOA,sBACI,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAC5BF,MADD;AAAA,oBAEID,QAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAjBM;;GAAMD,c;;KAAAA,c","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\nimport io from \"socket.io-client\";\n\nconst SOCKET_URL = \"http://localhost:8080\";\n\nexport const SocketContext = createContext();\n\nexport const SocketProvider = ({children}) => {\n\n    const [socket, setSocket] = useState();\n    \n    useEffect(() => {\n        let connect = io(SOCKET_URL);\n        setSocket(connect)\n\n    }, [])\n\n\n    return(\n        <SocketContext.Provider value={  \n         socket\n        }> {children}\n        </SocketContext.Provider>\n      )\n}\n\n\n"]},"metadata":{},"sourceType":"module"}