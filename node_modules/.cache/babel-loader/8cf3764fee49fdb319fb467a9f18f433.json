{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/pages/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext, useRef } from 'react';\nimport SocketContext from '../../../context/socketContext';\nimport { useHistory } from 'react-router-dom';\nimport Container from '@material-ui/core/Container';\nimport { Grid, Button } from '@material-ui/core';\nimport RecentMessages from '../../components/RecentMessages/RecentMessages';\nimport CurrentMessages from '../../components/currentMessages/CurrentMessages';\nimport UserList from '../../components/users/UserList';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './Chat.css';\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const [recentMessages, setRecentMessages] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [user_name, setUser_name] = useState('');\n  const [roomName, setRoomName] = useState('');\n  const [userAvatar, setUserAvatar] = useState('');\n  const [loggedIn, setLoggedIn] = useState('');\n  const socket = useContext(SocketContext);\n  const history = useHistory();\n  const user = props.location.state.userName;\n  const room = props.location.state.room;\n  const avatar = props.location.state.avatar;\n  let sendMessage = useRef();\n  let disconnectUser = useRef();\n  useEffect(() => {\n    setUser_name(user);\n    setRoomName(room);\n    setUserAvatar(avatar);\n    socket.emit('join', user_name, roomName, userAvatar);\n  }, [user, user_name, room, roomName, socket, avatar, userAvatar]);\n  useEffect(() => {\n    socket.on('broadcast', data => {\n      setLoggedIn(data.message_text);\n    });\n  }, [user, user_name, room, roomName, socket]);\n  useEffect(() => {\n    socket.on('mostRecentMessages', data => {\n      setRecentMessages(data);\n    });\n  }, [recentMessages, socket]);\n  useEffect(() => {\n    socket.on('usersInRoom', users => {\n      setUsers(users);\n    });\n  }, [socket]);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, [socket]);\n\n  const handleChatInput = event => {\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name,\n      avatar: userAvatar,\n      room: roomName\n    });\n  };\n\n  useEffect(() => {\n    sendMessage.current = () => {\n      socket.emit('send-message', roomName, message, avatar);\n    };\n  }, [socket, message, roomName, avatar]);\n  useEffect(() => {\n    disconnectUser.current = async () => {\n      socket.emit('leave', roomName, user_name);\n      history.push(\"/\");\n    };\n\n    window.onunload = async () => {\n      socket.emit('leave', roomName, user_name);\n    };\n  }, [socket, roomName, user_name, history]);\n  useEffect(() => {\n    socket.on('leftusers', data => {\n      setUsers(data);\n    });\n  }, [socket]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      item: true,\n      xl: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        className: \"userList\",\n        item: 3,\n        children: /*#__PURE__*/_jsxDEV(UserList, {\n          avatar: avatar,\n          users: users\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xl: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mainContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"admin_message\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\" \", loggedIn, \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spacer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: disconnectUser.current,\n              children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages-show-container\",\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"chat-messages-show-list\",\n              children: [/*#__PURE__*/_jsxDEV(RecentMessages, {\n                recentMessages: recentMessages,\n                user_name: user_name,\n                avatar: avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CurrentMessages, {\n                messages: messages,\n                user_name: user_name,\n                avatar: avatar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chat-messages-create-container footer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"message\",\n              onChange: handleChatInput,\n              className: \"chat-messages-create-input\",\n              type: \"text\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"chat-messages-create-button\",\n              onClick: e => sendMessage.current(),\n              children: \" Send \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"Xh+Q5eQCWA+VO859YiBr1hbg5bQ=\", false, function () {\n  return [useHistory];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/pages/chat/Chat.js"],"names":["React","useState","useEffect","useContext","useRef","SocketContext","useHistory","Container","Grid","Button","RecentMessages","CurrentMessages","UserList","CloseIcon","Chat","props","message","setMessage","messages","setMessages","recentMessages","setRecentMessages","users","setUsers","user_name","setUser_name","roomName","setRoomName","userAvatar","setUserAvatar","loggedIn","setLoggedIn","socket","history","user","location","state","userName","room","avatar","sendMessage","disconnectUser","emit","on","data","message_text","prevMessages","handleChatInput","event","target","name","value","username","current","push","window","onunload","e"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext, useRef } from 'react';\nimport SocketContext from '../../../context/socketContext';\nimport {useHistory } from 'react-router-dom'\nimport Container from '@material-ui/core/Container';\nimport { Grid, Button } from '@material-ui/core';\nimport RecentMessages from '../../components/RecentMessages/RecentMessages';\nimport CurrentMessages from '../../components/currentMessages/CurrentMessages';\nimport UserList from '../../components/users/UserList';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './Chat.css';\n \n\nexport default function Chat(props) {\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const [recentMessages, setRecentMessages] = useState([]);\n    const [users, setUsers] = useState([])\n    const [user_name, setUser_name] = useState('');\n    const [roomName, setRoomName] = useState('');\n    const [userAvatar, setUserAvatar] = useState('');\n    const [loggedIn, setLoggedIn] = useState('');\n\n    const socket = useContext(SocketContext);\n    const history = useHistory();\n  \n    const  user  = props.location.state.userName;\n    const  room  = props.location.state.room;\n    const  avatar = props.location.state.avatar;\n\n    let sendMessage = useRef();\n    let disconnectUser = useRef();\n\n    useEffect(() => {\n      setUser_name(user);\n      setRoomName(room);\n      setUserAvatar(avatar);\n      socket.emit('join', user_name, roomName, userAvatar);\n    }, [user, user_name, room, roomName, socket, avatar, userAvatar]);\n    \n    useEffect(() => {\n      socket.on('broadcast', data => {\n        setLoggedIn(data.message_text);\n      });   \n    }, [user, user_name, room, roomName, socket]);\n    \n    useEffect(() => {\n      socket.on('mostRecentMessages', data => {\n        setRecentMessages(data);\n      });\n    }, [recentMessages, socket]);\n    \n    useEffect(() => {\n      socket.on('usersInRoom', users => {\n        setUsers(users);\n      });\n    }, [socket]);\n    \n    useEffect(() => {\n      socket.on('newChatMessage', message => {\n        setMessages(prevMessages => [...prevMessages, message]);\n      });\n    }, [socket]);\n    \n    const handleChatInput = (event) => {\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name,\n        avatar: userAvatar,\n        room: roomName,\n      });\n    }\n    \n    useEffect(() => {\n      sendMessage.current = () => {\n        socket.emit('send-message', roomName, message, avatar);\n      };\n    }, [socket, message, roomName, avatar]);\n    \n    useEffect(() => {\n      disconnectUser.current = async () => {\n        socket.emit('leave', roomName, user_name);\n        history.push(\"/\");\n      };\n      window.onunload = async () => {\n        socket.emit('leave', roomName, user_name);\n      };\n    }, [socket, roomName, user_name, history]);\n    \n    useEffect(() => {\n      socket.on('leftusers', data => {\n        setUsers(data);\n      });\n    }, [socket]);\n  \n  return(\n    <Container>\n      <Grid  container item xl={true}>\n        <Grid className=\"userList\" item={3}>\n          <UserList avatar={avatar} users={users} />\n        </Grid>\n        <Grid item xl={true}>\n          <div className=\"mainContainer\">\n            <div className=\"admin_message\">\n              <h3> {loggedIn} </h3>\n              <div className=\"spacer\"></div>\n              <Button onClick={disconnectUser.current}>\n                <CloseIcon />\n              </Button>\n            </div>\n            <div className=\"chat-messages-show-container\">\n              <ul className=\"chat-messages-show-list\">\n                <RecentMessages recentMessages={recentMessages} user_name={user_name} avatar={avatar} />\n                <CurrentMessages messages={messages} user_name={user_name} avatar={avatar} />\n              </ul>\n            </div>\n            <div className=\"chat-messages-create-container footer\">\n              <input name=\"message\" onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n              <button type=\"submit\" className=\"chat-messages-create-button\" onClick={e=> sendMessage.current()} > Send </button>\n            </div>\n          </div>\n        </Grid>\n      </Grid>\n    </Container>\n    );\n}"]},"metadata":{},"sourceType":"module"}