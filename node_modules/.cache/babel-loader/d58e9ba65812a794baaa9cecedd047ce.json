{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\nexport default function Chat(props) {\n  _s();\n\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState(initialMessagesState);\n  const [recentMessages, setRecentMessages] = useState([]);\n  const [user_name, setUsername] = useState({\n    userName: ''\n  });\n  const user = props.location.state.userName;\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setUsername(user);\n    socket.emit('join', user_name);\n  }, [user, user_name]);\n  useEffect(() => {\n    socket.on('mostRecentMessages', message => {\n      setRecentMessages(message);\n    });\n  }, [recentMessages]);\n  useEffect(() => {\n    socket.on('newChatMessage', message => {\n      setMessages(prevMessages => [...prevMessages, message]);\n    });\n  }, [messages]);\n\n  const handleChatInput = event => {\n    event.persist();\n    setMessage({\n      [event.target.name]: event.target.value,\n      username: user_name\n    });\n  };\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('send-message', message);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-messages\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-show-container\",\n      children: [recentMessages && recentMessages.map(msg => {\n        return /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"chat-messages-show-list\",\n          id: \"message-list\",\n          children: /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [msg.username, \" :  \", msg.message, \" \"]\n          }, msg.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this);\n      }), console.log(messages)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages-create-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"message\",\n        onChange: handleChatInput,\n        className: \"chat-messages-create-input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"chat-messages-create-button\",\n        onClick: sendMessage,\n        children: \" Send \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Chat, \"4OghLz+xW2/m+asebggQ0U6t17w=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/martinraba/Desktop/chat-app/src/chat/chat/Chat.js"],"names":["React","useState","useEffect","io","ENDPOINT","socket","Chat","props","message","setMessage","messages","setMessages","initialMessagesState","recentMessages","setRecentMessages","user_name","setUsername","userName","user","location","state","emit","on","prevMessages","handleChatInput","event","persist","target","name","value","username","sendMessage","preventDefault","map","msg","id","console","log"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport io from 'socket.io-client';\nimport './Chat.css';\n\nconst ENDPOINT = \"http://localhost:8080\";\nlet socket;\n\n\nexport default function Chat(props) {\n\n\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState(initialMessagesState);\n    const [recentMessages, setRecentMessages] = useState([]);\n    const [user_name, setUsername] = useState({userName: ''});\n\n\n    \n    const  user  = props.location.state.userName;\n\n \n  \n    useEffect(() => {\n      socket = io(ENDPOINT);\n      setUsername(user);\n      socket.emit('join',  user_name );\n    }, [user, user_name])\n\n    \n\n    useEffect(() => {\n      socket.on('mostRecentMessages', message => {\n        setRecentMessages(message);\n      })\n    }, [recentMessages])\n\n    useEffect(() => {\n      socket.on('newChatMessage', message => {\n        setMessages(prevMessages => [ ...prevMessages, message ]);\n      });\n    }, [messages])\n  \n\n    const handleChatInput = (event) => {\n      event.persist();\n      setMessage({\n        [event.target.name]: event.target.value,\n        username: user_name\n      });\n    }\n\n\n    const sendMessage = (event) => {\n      event.preventDefault();\n      if(message) {\n        socket.emit('send-message',  message);\n      } \n    }\n    \n      return(\n\n        <div className=\"chat-messages\">\n            <div className=\"chat-messages-show-container\">\n              {recentMessages && recentMessages.map(msg => {\n                 return <ul className=\"chat-messages-show-list\" id=\"message-list\">\n                     <li key={msg.id}>{msg.username} :  { msg.message} </li>\n\n                 </ul>\n              }\n                )\n      \n                }\n                {console.log(messages)}\n               \n                    \n            </div>\n            <div className=\"chat-messages-create-container\"> \n                <input name=\"message\"      \n                    onChange={handleChatInput} className=\"chat-messages-create-input\" type=\"text\" />\n                <button type=\"submit\"  className=\"chat-messages-create-button\" onClick={sendMessage} > Send </button>\n            </div>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}